{"version":3,"sources":["constants.js","views/tpv/OrderModal.jsx","views/Navbar.jsx","ducks/main.js","views/layouts/main.jsx","ducks/tpv.js","ducks/products.js","views/layouts/tpv.jsx","views/hall/closeOrderModal.jsx","views/hall/TableDetail.jsx","ducks/tables.js","views/hall/Mesa.jsx","views/hall/Hall.jsx","views/tpv/Tpv.jsx","views/tpv/ShowTable.jsx","views/kitchen/Kitchen.jsx","views/products/CreateModal.jsx","views/products/List.jsx","views/products/Container.jsx","views/reports/Index.jsx","ducks/reports.js","views/reports/Container.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API","OrderModal","props","useState","show","setShow","order","setOrder","handleClose","Button","size","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Tabs","defaultActiveKey","id","className","Set","products","list","map","r","family","key","Tab","tabClassName","eventKey","title","ListGroup","filter","x","active","product","ListGroupItem","name","productId","newOrder","qty","removeProduct","addProduct","Footer","Axios","post","table","table_id","then","res","data","result","getTable","setNotification","Bar","type","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","tableId","message","dispatch","payload","initialState","flash","connect","state","main","clearNotifications","style","height","Alert","onClose","dismissible","children","get","catch","err","loading","getProductList","onProductsListFailed","selected","tpv","msg","useEffect","location","match","params","CloseOrderModal","Form","onSubmit","e","preventDefault","console","log","closeTable","total","FormGroup","TableDetail","setProducts","getTotalOrder","current_order","order_products","unit_price","Row","noGutters","Col","sm","Card","Table","p","length","find","findProductName","product_id","findProductType","status","getTableList","Mesa","onSwitch","width","tables","activeTable","setActiveTable","onSetActiveTable","setInterval","Container","fluid","padding","md","index","TableButton","fontSize","marginBottom","block","tableList","getList","paddingTop","xs","paddingLeft","paddingRight","Kitchen","orders","setOrders","getOrderList","setTimeout","getTotalOrders","totalOrders","forEach","op","productName","border","minHeight","disabled","orderId","window","confirm","Object","keys","CreateModal","setName","setFamily","price","setPrice","FormControl","value","onChange","target","handleSubmit","ProductsList","createProduct","toggleProduct","exact","path","render","ReportsIndex","getDayBalance","s","balance","push","reports","App","timeout","connectInterval","ws","WebSocket","that","onopen","setState","clearTimeout","onclose","Math","min","reason","check","onerror","error","close","onmessage","encodedMsg","JSON","parse","action","store","readyState","CLOSED","component","React","Component","HallRoutes","TPVRoutes","Boolean","hostname","rootReducer","combineReducers","middleware","thunk","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.203474d7.chunk.js","sourcesContent":["export const API = 'https://secretapi.megabrokerslatam.co';","import React, { useState } from 'react';\r\nimport { Button, Modal, ListGroup, ListGroupItem, Tabs, Tab } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { API } from '../../constants';\r\nconst OrderModal = props => {\r\n    const [show, setShow] = useState(false);\r\n    const [order, setOrder] = useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const placeOrder = () => {\r\n        Axios.post(API + '/tables/' + props.table.table_id + '/orders', order).then(res => res.data)\r\n            .then(result => {\r\n                props.getTable(props.table.table_id)\r\n                setOrder([])\r\n                handleClose();\r\n                props.setNotification('success','Orden Creada')\r\n            })\r\n    }\r\n    const addProduct = (productId) => {\r\n        let newOrder = { ...order }\r\n        if (newOrder[productId]) {\r\n            newOrder[productId].qty++;\r\n        }\r\n        else {\r\n            newOrder[productId] = { qty: 1 }\r\n        }\r\n        setOrder(newOrder)\r\n    }\r\n\r\n    const removeProduct = (productId) => {\r\n        let newOrder = { ...order }\r\n        if (newOrder[productId]) {\r\n            if (newOrder[productId].qty > 0) {\r\n                newOrder[productId].qty--;\r\n                setOrder(newOrder)\r\n            }\r\n            if (newOrder[productId].qty === 0) {\r\n                delete newOrder[productId];\r\n                setOrder(newOrder)\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Button size='sm' variant=\"info\" onClick={handleShow}>Tomar Pedido</Button>\r\n            <Modal size='lg' show={show} onHide={handleClose}>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Tomar Pedido</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Tabs defaultActiveKey=\"Segundos\" id=\"uncontrolled-tab-example\" className='flex-row'>\r\n                        {[...new Set(props.products.list.map(r => r.family))].map((family,key) => {\r\n                            return (\r\n                                <Tab key={key} tabClassName='px-2 bg-primary' eventKey={family} title={family}>\r\n                                    <div className='py-2'>\r\n                                    <ListGroup>\r\n                                        {\r\n                                            props.products.list.filter(x => x.family === family && x.active==='Y').map((product,key) => {\r\n                                                return (\r\n                                                    <ListGroupItem key={key} className='d-flex justify-content-between p-1'>\r\n                                                        <span>{product.name}</span>\r\n                                                        <span>\r\n                                                            <Button size='sm' onClick={() => removeProduct(product.id)}>-</Button>\r\n                                                            <span className='btn btn-secondary btn-sm'>{order[product.id] ? order[product.id].qty : 0}</span>\r\n                                                            <Button size='sm' onClick={() => addProduct(product.id)}>+</Button>\r\n                                                        </span>\r\n                                                    </ListGroupItem>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ListGroup>\r\n                                    </div>\r\n                                </Tab>)\r\n\r\n                        })}\r\n\r\n                    </Tabs>\r\n\r\n                  \r\n\r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>Volver</Button>\r\n                <Button variant=\"primary\" onClick={() => placeOrder()}>Enviar Pedido</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default OrderModal;","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport OrderModal from './tpv/OrderModal';\r\nconst Bar = props => {\r\n    const { type } = props;\r\n    if (type === 'pc') {\r\n        return (\r\n            <Navbar bg='dark' variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">Joropo Express</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Caja</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/kitchen\">Cocina</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/tpv\">TPV</Nav.Link>\r\n                        <NavDropdown title=\"Configuracion\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item as={Link} to=\"/reports\">Reportes</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Menu del Dia</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Otros</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Link} to=\"/hall/products\">Productos</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n    else if (type === 'order') {\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\" className='d-flex justify-content-between'>\r\n                <Navbar.Brand as={Link} to='/tpv'>{<span className='fa fa-arrow-left' />}</Navbar.Brand>\r\n                <Navbar.Brand href=\"#home\">Mesa {props.tableId}</Navbar.Brand>\r\n              \r\n                <OrderModal setNotification={props.setNotification} products={props.products} table={props.table} getTable={props.getTable} />\r\n            </Navbar>\r\n        )\r\n    }\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className='d-flex justify-content-start'>\r\n             <Navbar.Brand as={Link} className='d-none d-md-inline' to='/'>{<span className='fa fa-arrow-left' />}</Navbar.Brand>\r\n            <Navbar.Brand href=\"/tpv\">Seleccionar Mesa</Navbar.Brand>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default Bar;\r\n\r\n","/* Action Types */\r\nexport const SET_NOTIFICATION = 'SET_NOTIFICATION';\r\nexport const CLEAR_NOTIFICATION = 'CLEAR_NOTIFICATION';\r\n\r\n/* Action Creators */\r\nexport const onSetNotification = (data)=>({type:SET_NOTIFICATION,payload:data})\r\nexport const onClearNotification = ()=>({type:CLEAR_NOTIFICATION})\r\n/* Actions */\r\n\r\nexport const setNotification=(type,message)=>{\r\n    return dispatch=>{\r\n        dispatch(onSetNotification({type,message}))\r\n    }\r\n}\r\n\r\nexport const clearNotification=()=>{\r\n    return dispatch=>{\r\n        dispatch(onClearNotification())\r\n    }\r\n}\r\n/* Initial state */\r\n\r\nconst initialState={\r\n    flash:null\r\n}\r\n/* reducer */\r\n\r\nexport const mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                flash:action.payload\r\n            }\r\n        case CLEAR_NOTIFICATION:\r\n            return{\r\n                ...state,\r\n                flash:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, { Fragment } from 'react';\r\n\r\nimport Bar from '../Navbar';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { clearNotification } from '../../ducks/main';\r\n\r\nconst Main = props => {\r\n    return (\r\n        <Fragment>\r\n            <Bar type='pc' />\r\n            <div style={{ height: 50 }}>\r\n                {props.flash && <Alert onClose={() => props.clearNotifications()} dismissible variant={props.flash.type}>{props.flash.message}</Alert>}\r\n            </div>\r\n\r\n            {props.children}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst MSTP = state => (\r\n    { flash: state.main.flash }\r\n)\r\nconst MDTP = dispatch => {\r\n    return {\r\n        clearNotifications: () => dispatch(clearNotification())\r\n    }\r\n}\r\n\r\nexport default connect(MSTP, MDTP)(Main);","import Axios from \"axios\";\r\nimport { API } from \"../constants\";\r\nconst TABLE_REQUESTED = 'TABLE_REQUESTED';\r\nconst TABLE_SUCCEEDED = 'TABLE_SUCCEEDED';\r\nconst TABLE_FAILED = 'TABLE_FAILED';\r\n\r\nconst LIST_REQUESTED = 'LIST_REQUESTED';\r\nconst LIST_SUCCEEDED = 'LIST_SUCCEEDED';\r\nconst LIST_FAILED = 'LIST_FAILED';\r\n\r\nconst onListRequested = ()=>({type:LIST_REQUESTED})\r\nconst onListSucceeded = (data)=>({type:LIST_SUCCEEDED,payload:data})\r\nconst onListFailed = ()=>({type:LIST_FAILED})\r\n\r\nconst onTableRequested = ()=>({type:TABLE_REQUESTED})\r\nconst onTableSucceeded = (data)=>({type:TABLE_SUCCEEDED,payload:data})\r\nconst onTableFailed = ()=>({type:TABLE_FAILED})\r\n\r\n/* Actions */\r\nexport const getList=()=>{\r\n    return dispatch => {\r\n        dispatch(onListRequested());\r\n        Axios.get(API).then(res => {\r\n            dispatch(onListSucceeded(res.data.data))\r\n        })\r\n        .catch(err=>{\r\n                dispatch(onListFailed())\r\n        })\r\n    }\r\n}\r\n\r\nexport const getTable=(id)=>{\r\n    return dispatch => {\r\n        dispatch(onTableRequested());\r\n        Axios.get(API+'/tables/'+id).then(res => {\r\n            dispatch(onTableSucceeded(res.data.data))\r\n        })\r\n        .catch(err=>{\r\n                dispatch(onTableFailed())\r\n        })\r\n    }\r\n}\r\n\r\n/* Initial State */\r\nconst initialState = {\r\n    list: [],\r\n    active: null,\r\n    loading: false,\r\n}\r\n/* Reducer */\r\n\r\n\r\nexport const tpvReducer = (tables = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIST_SUCCEEDED:\r\n            return{\r\n                ...tables,\r\n                list:action.payload\r\n            }\r\n        case TABLE_SUCCEEDED:\r\n            return {\r\n                ...tables,\r\n                active:action.payload\r\n            }\r\n        default:\r\n            return tables\r\n    }\r\n}","import Axios from 'axios'\r\nimport { API } from '../constants';\r\nimport { setNotification } from './main';\r\n\r\n/* Action Types */\r\nexport const PRODUCT_LIST_REQUESTED = 'PRODUCT_LIST_REQUESTED'\r\nexport const PRODUCT_LIST_SUCCEEDED = 'PRODUCT_LIST_SUCCEEDED'\r\nexport const PRODUCT_LIST_FAILED = 'PRODUCT_LIST_FAILED'\r\n\r\nexport const PRODUCT_CREATE_REQUESTED = 'PRODUCT_CREATE_REQUESTED'\r\nexport const PRODUCT_CREATE_SUCCEEDED = 'PRODUCT_CREATE_SUCCEEDED'\r\nexport const PRODUCT_CREATE_FAILED = 'PRODUCT_CREATE_FAILED'\r\n\r\nexport const PRODUCT_TOGGLE_REQUESTED = \"PRODUCT_TOGGLE_REQUESTED\"\r\nexport const PRODUCT_TOGGLE_FAILED = \"PRODUCT_TOGGLE_FAILED\"\r\nexport const PRODUCT_TOGGLE_SUCCEEDED = \"PRODUCT_TOGGLE_SUCCEEDED\";\r\n\r\n/* Action Creators */\r\nexport const onProductsListRequested = () => ({ type: PRODUCT_LIST_REQUESTED })\r\nexport const onProductsListSucceeded = data => ({ type: PRODUCT_LIST_SUCCEEDED, payload: data })\r\nexport const onProductsListFailed = err => ({ type: PRODUCT_LIST_FAILED, payload: err })\r\n\r\nexport const onProductCreateRequested = () => ({ type: PRODUCT_CREATE_REQUESTED })\r\nexport const onProductCreateSucceeded = () => ({ type: PRODUCT_CREATE_SUCCEEDED })\r\nexport const onProductCreateFailed = () => ({ type: PRODUCT_CREATE_FAILED })\r\n\r\nexport const onProductToggleRequested = ()=>({ type: PRODUCT_TOGGLE_REQUESTED })\r\nexport const onProductToggleSucceeded = ()=>({ type: PRODUCT_TOGGLE_SUCCEEDED })\r\nexport const onProductToggleFailed = ()=>({ type: PRODUCT_TOGGLE_FAILED })\r\n/* Actions */\r\nexport const getProductList = () => {\r\n    return dispatch => {\r\n        dispatch(onProductsListRequested());\r\n        Axios.get(API + '/products').then(res => {\r\n            dispatch(onProductsListSucceeded(res.data.data))\r\n        })\r\n            .catch(err => {\r\n                dispatch(onProductsListFailed(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const createProduct = ({ name, family, price }) => {\r\n    return dispatch => {\r\n        dispatch(onProductCreateRequested());\r\n        Axios.post(API + '/products', { product: { name, family, price } }).then(res => {\r\n            dispatch(onProductCreateSucceeded(res.data.data))\r\n            dispatch(setNotification('success', res.data.data))\r\n            dispatch(getProductList())\r\n        })\r\n            .catch(err => {\r\n                dispatch(onProductCreateFailed(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport const toggleProduct = (id)=>{\r\n    return dispatch => {\r\n        dispatch(onProductToggleRequested());\r\n        Axios.get(API + '/products/'+id+'/toggle').then(res => {\r\n            dispatch(onProductToggleSucceeded(res.data.data))\r\n            dispatch(setNotification('success',res.data.data))\r\n            dispatch(getProductList())\r\n        })\r\n            .catch(err => {\r\n                dispatch(setNotification('danger',\"Error\"))\r\n                dispatch(onProductToggleFailed(err))\r\n            })\r\n    }\r\n}\r\n/* Initial state */\r\nconst initialState = {\r\n    list: [],\r\n    selected: null,\r\n    loading: false\r\n}\r\n/* reducer */\r\n\r\nexport const productsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case PRODUCT_LIST_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                list: action.payload\r\n            }\r\n        case PRODUCT_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { Fragment,useEffect } from 'react';\r\n\r\nimport Bar from '../Navbar';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { clearNotification, setNotification } from '../../ducks/main';\r\nimport { getTable } from '../../ducks/tpv';\r\nimport { getProductList } from '../../ducks/products';\r\n\r\nconst TpvLayout = props => {\r\n    useEffect(() => {\r\n        props.getProductList()\r\n        //eslint-disable-next-line \r\n    }, [])\r\n\r\n        return (\r\n            <Fragment>\r\n                {!props.location?  <Bar type='tpv' />:<Bar getTable={props.getTable} table={props.table} type='order' setNotification={props.setNotification} products={props.products} tableId={props.match.params.id}/>}\r\n                <div style={{ height: 50 }}>\r\n                    {props.flash && <Alert onClose={() => props.clearNotifications()} dismissible variant={props.flash.type}>{props.flash.message}</Alert>}\r\n                </div>\r\n                {props.children}\r\n            </Fragment>\r\n        )\r\n}\r\n\r\n\r\nconst MSTP = state => (\r\n    { \r\n        flash: state.main.flash,\r\n        table: state.tpv.active,\r\n        products:state.products\r\n      \r\n     }\r\n)\r\nconst MDTP = dispatch => {\r\n    return {\r\n        clearNotifications: () => dispatch(clearNotification()),\r\n        getTable: (id) => dispatch(getTable(id)),\r\n        getProductList:()=>dispatch(getProductList()),\r\n        setNotification:(type,msg)=>dispatch(setNotification(type,msg))\r\n    }\r\n}\r\n\r\nexport default connect(MSTP, MDTP)(TpvLayout);\r\n\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Modal, Button, Form, FormGroup } from 'react-bootstrap'\r\nexport const CloseOrderModal = props => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log(props)\r\n        props.closeTable(props.table.table_id);\r\n        handleClose();\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Cerrar Orden\r\n        </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Cerrar Mesa #{props.table.table_id}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>Total a Cancelar: {props.total} </p>\r\n\r\n                        <FormGroup>\r\n\r\n                        </FormGroup>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>Cerrar</Button>\r\n                        <Button variant=\"primary\" type='submit'>Aceptar</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </Fragment>\r\n    );\r\n}   \r\n","import React,{useEffect,useState} from 'react';\r\nimport { Row, Col, Card, Table } from 'react-bootstrap';\r\nimport { CloseOrderModal } from './closeOrderModal';\r\nimport Axios from 'axios';\r\nimport { API } from '../../constants';\r\n\r\nconst TableDetail = props => {\r\n    const [products,setProducts]=useState([])\r\n    const getTotalOrder = () => {\r\n        let total = 0;\r\n        if (props.table.current_order) {\r\n            props.table.current_order.order_products.map(x => {\r\n                total = total + (x.qty * x.unit_price);\r\n                return null\r\n            })\r\n        }\r\n        return total;\r\n    }\r\n    useEffect(() => {\r\n        Axios.get(API + '/products').then(res => res.data)\r\n            .then(result => setProducts(result.data))\r\n        //eslint-disable-next-line \r\n    }, [])\r\n\r\n    const findProductName=(productId)=>{\r\n        if(products.length>0){\r\n            console.log(productId,products)\r\n            return products.find(x=>x.id===productId).name\r\n        }\r\n       \r\n    }\r\n\r\n    const findProductType=(productId)=>{\r\n        if(products.length>0){\r\n            console.log(productId,products)\r\n            return products.find(x=>x.id===productId).family==='Completos'?'Completo':'Solo'\r\n        }\r\n    }\r\n    return (\r\n        <div className='table-details'>\r\n            <Row noGutters>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                              <h3 className=\"text-center\">MESA NUMERO {props.table.table_id}</h3>\r\n                             {props.table.current_order && <p className=\"text-center\">Orden # {props.table.current_order.id}</p> } \r\n                              </Card.Header>\r\n\r\n                        <Card.Body>\r\n                            <Table size='sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Descripcion</th>\r\n                                        \r\n                                        <th>Cantidad</th>\r\n                                        <th>P. Unitario</th>\r\n                                        <th>Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.table.current_order && props.table.current_order.order_products.map(p => {\r\n                                        \r\n                                        return (\r\n                                            <tr>\r\n                                                <td>{findProductName(p.product_id)+' ('+findProductType(p.product_id)+')'}</td>\r\n                                                <td>{p.qty}</td>\r\n                                                <td>{p.unit_price}</td>\r\n                                                <td>{p.qty * p.unit_price}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n\r\n                        {\r\n                            props.table.current_order && (props.table.current_order.status === 'open' || props.table.current_order.status ==='delivered') ?\r\n                                <Card.Footer className='d-flex justify-content-between'>\r\n                                    <span> Total a cobrar: {getTotalOrder()}</span>\r\n                                    <CloseOrderModal table={props.table} total={getTotalOrder()} closeTable={props.closeTable}/>\r\n                                </Card.Footer>\r\n                                : null\r\n                        }\r\n\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableDetail;","import Axios from 'axios'\r\nimport { API } from '../constants';\r\n/* Action Types */\r\nexport const TABLE_LIST_REQUESTED = \"TABLE_LIST_REQUESTED\";\r\nexport const TABLE_LIST_SUCCEEDED = \"TABLE_LIST_SUCCEEDED\";\r\nexport const TABLE_LIST_FAILED = \"TABLE_LIST_FAILED\";\r\n\r\nexport const SET_ACTIVE_TABLE = \"SET_ACTIVE_TABLE\";\r\n\r\nexport const CLOSE_TABLE_REQUESTED = 'CLOSE_TABLE_REQUESTED';\r\nexport const CLOSE_TABLE_SUCCEEDED = 'CLOSE_TABLE_SUCCEEDED';\r\nexport const CLOSE_TABLE_FAILED = 'CLOSE_TABLE_FAILED';\r\n\r\n\r\n/* Action Creators */\r\nexport const onTableListRequested = () => ({ type: TABLE_LIST_REQUESTED })\r\nexport const onTableListSucceeded = (data) => ({ type: TABLE_LIST_SUCCEEDED, payload: data })\r\nexport const onTableListFailed = () => ({ type: TABLE_LIST_FAILED })\r\n\r\nexport const onSetActiveTable= (id)=>({type:SET_ACTIVE_TABLE,payload:id})\r\n\r\nexport const onCloseTableRequested = ()=>({type:CLOSE_TABLE_REQUESTED})\r\nexport const onCloseTableSucceeded = (data)=>({type:CLOSE_TABLE_SUCCEEDED,payload:data})\r\nexport const onCloseTableFailed = ()=>({type:CLOSE_TABLE_FAILED})\r\n/* Actions */\r\nexport const getTableList = () => {\r\n    return dispatch => {\r\n        dispatch(onTableListRequested());\r\n        Axios.get(API).then(res => {\r\n            dispatch(onTableListSucceeded(res.data.data))\r\n        })\r\n        .catch(err=>{\r\n                dispatch(onTableListFailed())\r\n        })\r\n    }\r\n}\r\n\r\nexport const setActiveTable=(id)=>{\r\n    return dispatch =>{\r\n        Axios.get(API+'/tables/'+id).then(res=>{\r\n            dispatch(onSetActiveTable(res.data.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const closeTable=(id)=>{\r\n    return dispatch=>{\r\n        Axios.get(API+'/tables/'+id+'/close').then(res=>{\r\n            dispatch(onCloseTableSucceeded(res.data.data))\r\n        })\r\n    }\r\n}\r\n/* Initial State */\r\nconst initialState = {\r\n    list: [],\r\n    selected: null,\r\n    loading: false\r\n}\r\n\r\n/* Reducer */\r\nexport const tablesReducer = (tables = initialState, action) => {\r\n    switch (action.type) {\r\n        case TABLE_LIST_REQUESTED:\r\n            return {\r\n                ...tables,\r\n                loading: true\r\n            }\r\n        case TABLE_LIST_SUCCEEDED:\r\n            return {\r\n                ...tables,\r\n                loading: false,\r\n                list: action.payload\r\n            }\r\n        case TABLE_LIST_FAILED:\r\n            return {\r\n                ...tables,\r\n                loading: false\r\n            }\r\n        case SET_ACTIVE_TABLE:\r\n            let activeTable = action.payload\r\n            return {\r\n                ...tables,\r\n                selected:activeTable\r\n            }\r\n        case CLOSE_TABLE_SUCCEEDED:\r\n            return{\r\n                ...tables,\r\n                selected:null\r\n            }\r\n        default:\r\n            return tables\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nconst Mesa = props => {\r\n    return (\r\n        <Button variant={props.status==='closed'?'outline-success':props.status==='delivered'?'outline-warning':'outline-danger'} onClick={()=>props.onSwitch(props.table.table_id)} style={{width:'25%',height:100}} className='mesa my-2 mx-2'>\r\n           {props.table.table_id}\r\n        </Button>\r\n\r\n    )\r\n}\r\nexport default Mesa","import React, { useEffect } from 'react';\r\nimport { Row, Col, Container, Card } from 'react-bootstrap';\r\nimport TableDetail from './TableDetail';\r\nimport { connect } from 'react-redux';\r\nimport { getTableList, setActiveTable, closeTable } from '../../ducks/tables';\r\nimport Mesa from './Mesa';\r\n\r\nconst Hall = props => {\r\n    useEffect(() => {\r\n        props.getTableList()\r\n        setInterval(()=>{\r\n            props.getTableList()\r\n        },10000)\r\n        //eslint-disable-next-line \r\n    }, [])\r\n    return (\r\n        <Container fluid style={{ padding: 30 }}>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <Card.Header>Mesas</Card.Header>\r\n                        <Card.Body className='d-flex flex-wrap flex-row justify-content-center'>\r\n                            {props.list.map((table, index) => (\r\n                                <Mesa table={table} key={index} onSwitch={props.setActiveTable} active={props.activeTable?props.activeTable.table_id === table.table_id:null} status={table.status} />\r\n                            ))}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md={8}>\r\n                    {props.activeTable && <TableDetail table={props.activeTable} closeTable={props.closeTable}/>}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.tables.list,\r\n    activeTable: state.tables.selected\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getTableList: () => dispatch(getTableList()),\r\n    setActiveTable: (id) => dispatch(setActiveTable(id)),\r\n    closeTable:(id)=>dispatch(closeTable(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hall);","\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getList } from '../../ducks/tpv';\r\nconst Tpv = props => {\r\n    useEffect(() => {\r\n        props.getList()\r\n        //eslint-disable-next-line \r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <Container fluid style={{ padding: 15, paddingTop: 10 }}>\r\n                <Row className='text-center'>\r\n                    {\r\n                        props.tableList.map(table => (\r\n                            <Col xs={4} style={{ paddingLeft: 5, paddingRight: 5 }}>\r\n                                <TableButton id={table.table_id} variant={table.status==='closed'?'success':'danger'} />\r\n                            </Col>\r\n                        ))\r\n                    }\r\n\r\n                  \r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst TableButton = props => {\r\n    return <Button {...props} as={Link} to={'/tpv/'+props.id} style={{ fontSize: 24, marginBottom: 10 }} block>MESA {props.id}</Button>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tableList: state.tpv.list\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getList: () => { dispatch(getList()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tpv);","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Container, Row, Col,  Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getTable } from '../../ducks/tpv';\r\nimport Axios from 'axios';\r\nimport { API } from '../../constants';\r\nconst ShowTable = props => {\r\n   \r\n    const [products, setProducts] = useState([]);\r\n    useEffect(() => {\r\n\r\n        props.getTable(props.match.params.id)\r\n        //eslint-disable-next-line \r\n    }, [])\r\n    useEffect(() => {\r\n        Axios.get(API + '/products').then(res => res.data)\r\n            .then(result => setProducts(result.data))\r\n        //eslint-disable-next-line \r\n    }, [])\r\n\r\n    const findProductName=(productId)=>{\r\n        if(products.length>0){\r\n           \r\n            return products.find(x=>x.id===productId).name\r\n        }\r\n       \r\n    }\r\n    const findProductType=(productId)=>{\r\n        if(products.length>0){\r\n     \r\n            return products.find(x=>x.id===productId).family==='Completos'?'Completo':'Solo'\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n           \r\n            <Container style={{ paddingTop: 15 }}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <h3 className=\"text-center\">Orden Actual</h3>\r\n                        {\r\n                            props.table && props.table.current_order ?\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Producto</th>\r\n                                            <th>Cantidad</th>\r\n                                            <th>Precio</th>\r\n                                            <th>Subtotal</th>\r\n                                        </tr>\r\n\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            props.table.current_order.order_products.map(p => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{findProductName(p.product_id)+' ('+findProductType(p.product_id)+')'}</td>\r\n                                                        <td>{p.qty}</td>\r\n                                                        <td>{p.unit_price}</td>\r\n                                                        <td>{p.qty*p.unit_price}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                                :\r\n                                <p className='text-center'>No hay Orden Abierta para esta mesa</p>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    table: state.tpv.active,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTable: (id) => dispatch(getTable(id)) // data:{table_id, current_order}\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTable)","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Table, Button, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { API } from '../../constants';\r\n\r\nconst Kitchen = props => {\r\n    const [orders, setOrders] = useState(null);\r\n    const [products, setProducts] = useState([]);\r\n    useEffect(() => {\r\n        getOrderList()\r\n        setTimeout(() => getOrderList(), 10000)\r\n        //eslint-disable-next-line \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get(API + '/products').then(res => res.data)\r\n            .then(result => setProducts(result.data))\r\n        //eslint-disable-next-line \r\n    }, [])\r\n\r\n    const getOrderList = () => {\r\n        Axios.get(API + '/orders').then(res => res.data)\r\n            .then(result => {\r\n                setOrders(result.data);\r\n            })\r\n    }\r\n\r\n    const findProductName = (productId) => {\r\n        if (products.length > 0) {\r\n            console.log(productId, products)\r\n            return products.find(x => x.id === productId).name\r\n        }\r\n\r\n    }\r\n\r\n    const Deliver = orderId => {\r\n        if (window.confirm('Desea entegar esta orden'))\r\n            Axios.post(API + '/orders/' + orderId + '/deliver').then(res => res.data)\r\n                .then(result => {\r\n                    getOrderList()\r\n                })\r\n    }\r\n\r\n    const getTotalOrders = () => {\r\n        if (orders) {\r\n            let totalOrders = {}\r\n            orders.forEach((order) => {\r\n                if(order.status==='open'){\r\n                    order.order_products.forEach(op => {\r\n                        let productName = findProductName(op.product_id)\r\n                        if (totalOrders[productName]) {\r\n                            totalOrders[productName]=totalOrders[productName]+op.qty\r\n                        }\r\n                        else {\r\n                            totalOrders[productName] = op.qty;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            return totalOrders\r\n\r\n        }\r\n        else return {}\r\n    }\r\n    return (\r\n        <Container fluid className='w-100 px-0' >\r\n            <Row noGutters>\r\n                <Col sm={9}>\r\n                    <Card>\r\n                        <Card.Header>Ordenes</Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Row>\r\n                                {orders && orders.map(order => {\r\n                                    let bg = order.status === 'open' ? 'bg-success' : order.status === 'warning' ? 'bg-warning' : 'bg-danger'\r\n                                    return (\r\n                                        <Col sm={4} className='my-4'>\r\n                                            <Card border=\"primary\" style={{ minHeight: 200 }}>\r\n                                                <Card.Header className={bg + ' d-flex justify-content-between'}>\r\n                                                    <span>#{order.id}</span>\r\n                                                    <Button disabled={order.status !== 'open'} onClick={() => Deliver(order.id)} size='sm' variant='info'>Entregar</Button>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Table size='sm' variant='bordered'>\r\n                                                        <tbody>\r\n                                                            {order.order_products.map(op => {\r\n                                                                return (\r\n                                                                    <tr>\r\n                                                                        <td>{op.qty}</td>\r\n                                                                        <td>{findProductName(op.product_id)}</td>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })}\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n\r\n                                }\r\n                            </Row>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Card id='totalpedidos'>\r\n                        <Card.Header>Total Pedidos:</Card.Header>\r\n                        <ListGroup>\r\n                            {\r\n                                Object.keys(getTotalOrders()).map(order => {\r\n                                    return (\r\n\r\n                                        <ListGroupItem className='py-1 px-2 d-flex justify-content-between'><span>{order}</span><span>{getTotalOrders()[order]}</span></ListGroupItem>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Kitchen;","import React, { useState, Fragment } from 'react';\r\nimport { Button, Modal, Form, FormGroup, FormControl } from 'react-bootstrap';\r\nexport const CreateModal = props => {\r\n    const [show, setShow] = useState(false);\r\n    const [name,setName]=useState('')\r\n    const [family,setFamily]=useState('')\r\n    const [price,setPrice]=useState('')\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleSubmit = ()=>{\r\n        let product={name,family,price}\r\n        props.handleSubmit(product)\r\n        handleClose()\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Button className='mb-3' variant=\"primary\" onClick={handleShow}>Crear Producto</Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Crear Producto</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <label>Nombre:</label>\r\n                            <FormControl value={name} size='sm' onChange={({target})=>setName(target.value)}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Familia:</label>\r\n                            <FormControl value={family} size='sm' onChange={({target})=>setFamily(target.value)}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>Precio:</label>\r\n                            <FormControl value={price} type='number' onChange={({target})=>setPrice(target.value)} size='sm'/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"success\" onClick={handleSubmit}>Crear!</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport {  Table, Button, Tabs, Tab } from 'react-bootstrap'\r\nimport { CreateModal } from './CreateModal'\r\n\r\nexport const ProductsList = props => {\r\n    useEffect(() => {\r\n        props.getProductList()\r\n        //eslint-disable-next-line \r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <CreateModal handleSubmit={props.createProduct} />\r\n            \r\n            <Tabs defaultActiveKey=\"Segundos\" id=\"uncontrolled-tab-example\">\r\n                {[...new Set(props.products.list.map(r => r.family))].map(family => {\r\n                    return (\r\n                        <Tab eventKey={family} title={family}>\r\n                            <Table variant='striped' size='sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Nombre</th>\r\n                                        <th>Familia</th>\r\n                                        <th>Precio Base</th>\r\n                                        <th>Act/Desact.</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        props.products.list.filter(x => x.family === family).map(product => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{product.id}</td>\r\n                                                    <td>{product.name}</td>\r\n                                                    <td>{product.family}</td>\r\n                                                    <td>{product.price}</td>\r\n                                                    <td>\r\n                                                        <Button\r\n                                                            onClick={() => props.toggleProduct(product.id)}\r\n                                                            size='xs' variant={product.active === 'Y' ? \"danger\" : 'success'}>\r\n                                                            {product.active === 'Y' ? \"Desactivar\" : 'Activar'}\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Tab>\r\n                    )\r\n                })}\r\n\r\n\r\n\r\n            </Tabs>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { ProductsList } from './List';\r\nimport { connect } from 'react-redux';\r\nimport { getProductList, createProduct, toggleProduct } from '../../ducks/products';\r\n\r\nexport const ProductsContainer = props => {\r\n    return(\r\n        <Container fluid style={{ padding: 30 }}>\r\n            <Switch>\r\n                <Route exact path='/hall/products' render={()=><ProductsList {...props}/>}/>\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>(\r\n    {products:state.products}\r\n)\r\n\r\nconst mapDispatchToProps = dispatch =>(\r\n    {\r\n        getProductList:()=>dispatch(getProductList()),\r\n        createProduct:({name,family,price})=>dispatch(createProduct({name,family,price})),\r\n        toggleProduct:(id)=>dispatch(toggleProduct(id))\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductsContainer)","import React,{useEffect} from 'react';\r\nimport { Card, Table } from 'react-bootstrap';\r\n\r\nexport const ReportsIndex = props=>{\r\n    useEffect(() => {\r\n        props.getDayBalance()\r\n        //eslint-disable-next-line \r\n    }, [])\r\n    const s=[];\r\n   props.balance.map((op,index)=>{\r\n        if(index>0){\r\n            return s.push((op.qty*op.price)+s[index-1])\r\n        }\r\n        else{\r\n            return s.push(op.qty*op.price)\r\n        }\r\n    })\r\n    \r\n    return(\r\n        <Card>\r\n            <Card.Header>Balance del dia</Card.Header>\r\n            <Card.Body>\r\n                <Table>\r\n                    <thead>\r\n                    <th>Concepto</th>\r\n                    <th>Cantidad</th>\r\n                    <th>Movimiento</th>\r\n                    <th>Saldo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            props.balance.map((op,index)=>{\r\n                                return(\r\n                                    <tr>\r\n                                        <td>{op.product}</td>\r\n                                        <td>{op.qty}</td>\r\n                                        <td>{op.qty*op.price}</td>\r\n                                        <td>{s[index]}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import Axios from 'axios'\r\nimport { API } from '../constants';\r\nexport const DAY_BALANCE_REQUESTED = 'DAY_BALANCE_REQUEST';\r\nexport const DAY_BALANCE_SUCCEEDED = 'DAY_BALANCE_SUCCEEDED';\r\nexport const DAY_BALANCE_FAILED = 'DAY_BALANCE_FAILED';\r\n\r\nexport const onDayBalanceRequested=()=>({type:DAY_BALANCE_REQUESTED})\r\nexport const onDayBalanceSucceeded=(data)=>({type:DAY_BALANCE_SUCCEEDED,payload:data})\r\nexport const onDayBalanceFailed=()=>({type:DAY_BALANCE_FAILED})\r\n\r\n\r\nexport const getDayBalance = () => {\r\n    return dispatch => {\r\n        dispatch(onDayBalanceRequested());\r\n        Axios.get(API + '/balance').then(res => {\r\n            dispatch(onDayBalanceSucceeded(res.data.data))\r\n        })\r\n            .catch(err => {\r\n                dispatch(onDayBalanceFailed(err))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    balance:[],\r\n    \r\n    loading: false\r\n}\r\n\r\n\r\n\r\nexport const reportsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case DAY_BALANCE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DAY_BALANCE_SUCCEEDED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                balance: action.payload\r\n            }\r\n        case DAY_BALANCE_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { ReportsIndex } from './Index';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { getDayBalance } from '../../ducks/reports';\r\nconst ReportsContainer = props => {\r\n    return (\r\n    <Container fluid style={{ padding: 30 }}>\r\n        <Switch>\r\n            <Route exact path='/reports' render={() => <ReportsIndex {...props} />} />\r\n        </Switch>\r\n    </Container>\r\n    )\r\n}\r\n\r\nconst MSTP = state => {\r\n    return {\r\n        balance:state.reports.balance\r\n    }\r\n}\r\n\r\nconst MDTP = dispatch => {\r\n    return {\r\n        getDayBalance:()=>dispatch(getDayBalance())\r\n    }\r\n}\r\n\r\nexport default connect(MSTP, MDTP)(ReportsContainer)","import React from 'react';\r\nimport './assets/scss/application.scss';\r\nimport Main from './views/layouts/main';\r\nimport TpvLayout from './views/layouts/tpv';\r\nimport Hall from './views/hall/Hall';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Tpv from './views/tpv/Tpv';\r\nimport { getTableList } from './ducks/tables';\r\nimport { store } from './index';\r\nimport ShowTable from './views/tpv/ShowTable';\r\nimport Kitchen from './views/kitchen/Kitchen';\r\nimport ProductsContainer from './views/products/Container';\r\nimport ReportsContainer from './views/reports/Container';\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ws: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n  timeout = 250;\r\n\r\n  connect = () => {\r\n\r\n    var ws = new WebSocket(\"ws://localhost:8000/demo\");\r\n    let that = this; // cache the this\r\n    var connectInterval;\r\n\r\n    // websocket onopen event listener\r\n    ws.onopen = () => {\r\n      console.log(\"connected websocket main component\");\r\n      this.setState({ ws: ws });\r\n      that.timeout = 250; // reset timer to 250 on open of websocket connection \r\n      clearTimeout(connectInterval); // clear Interval on on open of websocket connection\r\n    };\r\n\r\n    // websocket onclose event listener\r\n    ws.onclose = e => {\r\n      console.log(\r\n        `Socket is closed. Reconnect will be attempted in ${Math.min(\r\n          10000 / 1000,\r\n          (that.timeout + that.timeout) / 1000\r\n        )} second.`,\r\n        e.reason\r\n      );\r\n\r\n      that.timeout = that.timeout + that.timeout; //increment retry interval\r\n      connectInterval = setTimeout(this.check, Math.min(10000, that.timeout)); //call check function after timeout\r\n    };\r\n\r\n    // websocket onerror event listener\r\n    ws.onerror = err => {\r\n      console.error(\r\n        \"Socket encountered error: \",\r\n        err.message,\r\n        \"Closing socket\"\r\n      );\r\n\r\n      ws.close();\r\n    };\r\n\r\n    ws.onmessage = encodedMsg => {\r\n      let msg = JSON.parse(encodedMsg.data)\r\n      switch (msg.action) {\r\n        case 'updateTables':\r\n          console.log(msg)\r\n          store.dispatch(getTableList());\r\n          break;\r\n        default:\r\n          console.log(msg, 'aaa')\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  check = () => {\r\n    const { ws } = this.state;\r\n    if (!ws || ws.readyState === WebSocket.CLOSED) this.connect(); //check if websocket instance is closed, if so call `connect` function.\r\n  };\r\n  render() {\r\n    return (\r\n      <Router>\r\n\r\n        <Switch>\r\n          <Route path='/hall' render={() => <HallRoutes />} />\r\n          <Route path='/tpv' render={() => <TPVRoutes />} />\r\n          <Route path='/kitchen' component={() => <Kitchen />} />\r\n          <Route exact path='/' render={() => <Redirect to='/hall' />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nconst HallRoutes = props => {\r\n  return (\r\n    <Switch>\r\n      <Main>\r\n        <Route path='/hall/products' component={() => <ProductsContainer />} />\r\n        <Route exact path='/hall/reports' component={() => <ReportsContainer />} />\r\n        <Route exact path='/hall' render={() => <Hall />} />\r\n      </Main>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst TPVRoutes = props => {\r\n  return (\r\n    <Switch>\r\n        <Route exact path='/tpv/' render={() => <TpvLayout><Tpv /></TpvLayout>} />\r\n        <Route path='/tpv/:id' render={(props)=><TpvLayout {...props}><ShowTable {...props}/></TpvLayout>} />\r\n    </Switch>\r\n  )\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware,combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { tablesReducer } from './ducks/tables';\r\nimport { tpvReducer } from './ducks/tpv';\r\nimport { productsReducer } from './ducks/products';\r\nimport { mainReducer } from './ducks/main';\r\nimport { reportsReducer } from './ducks/reports';\r\nconst rootReducer = combineReducers({\r\n    main:mainReducer,\r\n    tables:tablesReducer,\r\n    tpv:tpvReducer,\r\n    products:productsReducer,\r\n    reports:reportsReducer\r\n});\r\nconst middleware = [thunk];\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}